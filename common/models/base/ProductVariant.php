<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use Yii;

/**
 * This is the base-model class for table "product_variant".
 *
 * @property integer $id
 * @property string $name
 * @property string $slug
 * @property integer $product_id
 * @property integer $product_asset_id
 * @property string $code
 * @property string $sku
 * @property string $barcode
 * @property string $meta_field
 * @property string $option_ids
 * @property string $custom_price
 * @property double $unit_price
 * @property double $sll_price
 * @property double $import_price
 * @property string $inventory_management
 * @property string $inventory_policy
 * @property integer $inventory_quantity
 * @property integer $requires_shipping_address
 * @property string $unit_type
 * @property integer $grams
 * @property double $weight
 * @property string $weight_type
 * @property string $dimension
 * @property string $group_id
 * @property integer $position
 * @property string $created_at
 * @property string $updated_at
 * @property string $deleted_at
 * @property integer $visible
 * @property integer $color_id
 * @property integer $status
 * @property string $images
 * @property string $aliasModel
 */
abstract class ProductVariant extends \common\models\base\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'product_variant';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['product_id', 'product_asset_id', 'inventory_quantity', 'requires_shipping_address', 'grams', 'position', 'visible', 'color_id', 'status'], 'integer'],
            [['meta_field', 'option_ids', 'custom_price', 'group_id', 'images'], 'string'],
            [['unit_price', 'sll_price', 'import_price', 'weight'], 'number'],
            [['created_at', 'updated_at', 'deleted_at'], 'safe'],
            [['name', 'inventory_management'], 'string', 'max' => 256],
            [['slug'], 'string', 'max' => 255],
            [['code', 'sku', 'barcode'], 'string', 'max' => 128],
            [['inventory_policy', 'dimension'], 'string', 'max' => 64],
            [['unit_type', 'weight_type'], 'string', 'max' => 32]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => 'Name',
            'slug' => 'Slug',
            'product_id' => 'Product ID',
            'product_asset_id' => 'Product Asset ID',
            'code' => 'Code',
            'sku' => 'Sku',
            'barcode' => 'Barcode',
            'meta_field' => 'Meta Field',
            'option_ids' => 'Option Ids',
            'custom_price' => 'Custom Price',
            'unit_price' => 'Unit Price',
            'sll_price' => 'Sll Price',
            'import_price' => 'Import Price',
            'inventory_management' => 'Inventory Management',
            'inventory_policy' => 'Inventory Policy',
            'inventory_quantity' => 'Inventory Quantity',
            'requires_shipping_address' => 'Requires Shipping Address',
            'unit_type' => 'Unit Type',
            'grams' => 'Grams',
            'weight' => 'Weight',
            'weight_type' => 'Weight Type',
            'dimension' => 'Dimension',
            'group_id' => 'Group ID',
            'position' => 'Position',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
            'deleted_at' => 'Deleted At',
            'visible' => 'Visible',
            'color_id' => 'Color ID',
            'status' => 'Status',
            'images' => 'Images',
        ];
    }


    
    /**
     * @inheritdoc
     * @return \common\models\ProductVariantQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \common\models\ProductVariantQuery(get_called_class());
    }


}
